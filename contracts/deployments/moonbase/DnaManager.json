{
  "address": "0xD9A1161E19E4B0811E77EDEAe7141b0f66E62280",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "bgColorId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nogglesColorId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "crownId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "doodadId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "garlandId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "shieldId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "quadrantPalette1Id",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "quadrantPalette2Id",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "repId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "skillId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "classId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "traitId",
              "type": "uint8"
            }
          ],
          "internalType": "struct DnaManager.DecomposedDna",
          "name": "decomposedDna",
          "type": "tuple"
        }
      ],
      "name": "composeDna",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "dna",
          "type": "uint96"
        }
      ],
      "name": "decomposeDna",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "bgColorId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nogglesColorId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "crownId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "doodadId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "garlandId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "shieldId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "quadrantPalette1Id",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "quadrantPalette2Id",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "repId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "skillId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "classId",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "traitId",
              "type": "uint8"
            }
          ],
          "internalType": "struct DnaManager.DecomposedDna",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "storeAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seed",
          "type": "uint256"
        }
      ],
      "name": "generateDna",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3f171aa945fa6a5f11981c40d54fb4e92992864e17b0643f294d552521ee34e7",
  "receipt": {
    "to": null,
    "from": "0x6bdFDC29A4bd39Bf97D4C75c7f03b9dcbb9374af",
    "contractAddress": "0xD9A1161E19E4B0811E77EDEAe7141b0f66E62280",
    "transactionIndex": 0,
    "gasUsed": "1355054",
    "logsBloom": "0x
    "blockHash": "0x24cc751dfc1c2e4a77bb551d4a4fd763326ae0141814fcf7abb7e4294211650c",
    "transactionHash": "0x3f171aa945fa6a5f11981c40d54fb4e92992864e17b0643f294d552521ee34e7",
    "logs": [],
    "blockNumber": 4065853,
    "cumulativeGasUsed": "1355054",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "84ca75526b28510547d3ce718e5855d8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"bgColorId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nogglesColorId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"crownId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"doodadId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"garlandId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"shieldId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"quadrantPalette1Id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"quadrantPalette2Id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"repId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"skillId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"classId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"traitId\",\"type\":\"uint8\"}],\"internalType\":\"struct DnaManager.DecomposedDna\",\"name\":\"decomposedDna\",\"type\":\"tuple\"}],\"name\":\"composeDna\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"dna\",\"type\":\"uint96\"}],\"name\":\"decomposeDna\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"bgColorId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nogglesColorId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"crownId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"doodadId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"garlandId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"shieldId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"quadrantPalette1Id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"quadrantPalette2Id\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"repId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"skillId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"classId\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"traitId\",\"type\":\"uint8\"}],\"internalType\":\"struct DnaManager.DecomposedDna\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"storeAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"}],\"name\":\"generateDna\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"composeDna(DnaManager.DecomposedDna)\":{\"details\":\"Gets the DNA of a given traits.\",\"params\":{\"decomposedDna\":\"The traits to get the DNA from.\"},\"returns\":{\"_0\":\"The DNA of the traits.\"}},\"decomposeDna(uint96)\":{\"details\":\"Gets the traits of a given DNA.\",\"params\":{\"dna\":\"The DNA to get the traits from.\"},\"returns\":{\"_0\":\"The traits of the DNA.\"}},\"generateDna(address,uint256)\":{\"details\":\"Generates a unique DNA for an NFT based on a provided seed.\",\"params\":{\"seed\":\"The seed to generate the DNA.\",\"storeAddress\":\"Address of the parts store.\"},\"returns\":{\"_0\":\"The generated DNA as a uint96 value.\"}}},\"title\":\"DnaManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library to generate and manipulate DNA of Polkadot Builder Crests NFTs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/DnaManager.sol\":\"DnaManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPartsStore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\ninterface IPartsStore {\\n    struct Color {\\n        string name;\\n        string color;\\n    }\\n\\n    struct Palette {\\n        string name;\\n        string primary;\\n        string secondary;\\n    }\\n\\n    struct ImagePart {\\n        string name;\\n        string svg;\\n    }\\n\\n    struct AllParts {\\n        string[] bgColors;\\n        string[] nogglesColors;\\n        string[] crowns;\\n        string[] doodads;\\n        string[] garlands;\\n        string[] shields;\\n        string[] quadrantPalettes;\\n        string[] reps;\\n        string[] skills;\\n        string[] classes;\\n        string[] traits;\\n    }\\n\\n    function bgColorsCount() external view returns (uint256);\\n\\n    function nogglesColorsCount() external view returns (uint256);\\n\\n    function crownsCount() external view returns (uint256);\\n\\n    function doodadsCount() external view returns (uint256);\\n\\n    function garlandsCount() external view returns (uint256);\\n\\n    function shieldsCount() external view returns (uint256);\\n\\n    function quadrantPalettesCount() external view returns (uint256);\\n\\n    function repsCount() external view returns (uint256);\\n\\n    function skillsCount() external view returns (uint256);\\n\\n    function classesCount() external view returns (uint256);\\n\\n    function traitsCount() external view returns (uint256);\\n\\n    function getBgColor(uint8 id) external view returns (Color memory);\\n\\n    function getNogglesColor(uint8 id) external view returns (Color memory);\\n\\n    function getCrown(uint8 id) external view returns (ImagePart memory);\\n\\n    function getDoodad(uint8 id) external view returns (ImagePart memory);\\n\\n    function getGarland(uint8 id) external view returns (ImagePart memory);\\n\\n    function getShield(uint8 id) external view returns (ImagePart memory);\\n\\n    function getQuadrantPalette(uint8 id) external view returns (Palette memory);\\n\\n    function getRep(uint8 id) external view returns (ImagePart memory);\\n\\n    function getSkill(uint8 id) external view returns (ImagePart memory);\\n\\n    function getClass(uint8 id) external view returns (ImagePart memory);\\n\\n    function getTrait(uint8 id) external view returns (ImagePart memory);\\n\\n    function addBgColor(Color calldata color) external;\\n\\n    function addNogglesColor(Color calldata color) external;\\n\\n    function addCrown(ImagePart calldata part) external;\\n\\n    function addDoodad(ImagePart calldata part) external;\\n\\n    function addGarland(ImagePart calldata part) external;\\n\\n    function addShield(ImagePart calldata part) external;\\n\\n    function addQuadrantPalette(Palette calldata palette) external;\\n\\n    function addRep(ImagePart calldata part) external;\\n\\n    function addSkill(ImagePart calldata part) external;\\n\\n    function addClass(ImagePart calldata part) external;\\n\\n    function addTrait(ImagePart calldata part) external;\\n\\n    function getAllParts() external returns (AllParts memory);\\n}\\n\",\"keccak256\":\"0x2c4900a6007078e078250e3988a4970f43caf889a629c0200d093f32ac163409\",\"license\":\"MIT\"},\"contracts/lib/DnaManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport {IPartsStore} from \\\"../interfaces/IPartsStore.sol\\\";\\n\\n/**\\n * @title DnaManager\\n * @notice Library to generate and manipulate DNA of Polkadot Builder Crests NFTs.\\n */\\nlibrary DnaManager {\\n    struct DecomposedDna {\\n        uint8 bgColorId;\\n        uint8 nogglesColorId;\\n        uint8 crownId;\\n        uint8 doodadId;\\n        uint8 garlandId;\\n        uint8 shieldId;\\n        uint8 quadrantPalette1Id;\\n        uint8 quadrantPalette2Id;\\n        uint8 repId;\\n        uint8 skillId;\\n        uint8 classId;\\n        uint8 traitId;\\n    }\\n\\n    /**\\n     * @dev Generates a unique DNA for an NFT based on a provided seed.\\n     * @param storeAddress Address of the parts store.\\n     * @param seed The seed to generate the DNA.\\n     * @return The generated DNA as a uint96 value.\\n     */\\n    function generateDna(address storeAddress, uint256 seed) public view returns (uint96) {\\n        IPartsStore store = IPartsStore(storeAddress);\\n\\n        require(store.bgColorsCount() > 0, \\\"No bg colors\\\");\\n        require(store.nogglesColorsCount() > 0, \\\"No noggles colors\\\");\\n        require(store.crownsCount() > 0, \\\"No crowns\\\");\\n        require(store.doodadsCount() > 0, \\\"No doodads\\\");\\n        require(store.garlandsCount() > 0, \\\"No garlands\\\");\\n        require(store.shieldsCount() > 0, \\\"No shields\\\");\\n        require(store.quadrantPalettesCount() > 0, \\\"No logo palettes\\\");\\n        require(store.repsCount() > 0, \\\"No reps\\\");\\n        require(store.skillsCount() > 0, \\\"No skills\\\");\\n        require(store.classesCount() > 0, \\\"No classes\\\");\\n        require(store.traitsCount() > 0, \\\"No traits\\\");\\n\\n        // not truely random but it won't matter, we want a unique dna based on any number, usually a timestamp\\n        uint rand = uint(keccak256(abi.encodePacked(seed)));\\n\\n        return reduceDna(storeAddress, uint96(rand));\\n    }\\n\\n    /**\\n     * @dev Reduces the given DNA to its corresponding traits.\\n     * @param storeAddress Address of the parts store.\\n     * @param dna The DNA to reduce.\\n     * @return The reduced DNA as a uint96 value.\\n     */\\n    function reduceDna(address storeAddress, uint96 dna) private view returns (uint96) {\\n        IPartsStore store = IPartsStore(storeAddress);\\n\\n        DecomposedDna memory image = DecomposedDna({\\n            bgColorId: uint8(dna % store.bgColorsCount()),\\n            nogglesColorId: uint8((dna >> 8) % store.nogglesColorsCount()),\\n            crownId: uint8((dna >> 16) % store.crownsCount()),\\n            doodadId: uint8((dna >> 24) % store.doodadsCount()),\\n            garlandId: uint8((dna >> 32) % store.garlandsCount()),\\n            shieldId: uint8((dna >> 40) % store.shieldsCount()),\\n            quadrantPalette1Id: uint8((dna >> 48) % store.quadrantPalettesCount()),\\n            quadrantPalette2Id: uint8((dna >> 56) % store.quadrantPalettesCount()),\\n            repId: uint8((dna >> 64) % store.repsCount()),\\n            skillId: uint8((dna >> 72) % store.skillsCount()),\\n            classId: uint8((dna >> 80) % store.classesCount()),\\n            traitId: uint8((dna >> 88) % store.traitsCount())\\n        });\\n\\n        return composeDna(image);\\n    }\\n\\n    /**\\n     * @dev Gets the traits of a given DNA.\\n     * @param dna The DNA to get the traits from.\\n     * @return The traits of the DNA.\\n     */\\n    function decomposeDna(uint96 dna) public pure returns (DecomposedDna memory) {\\n        return\\n            DecomposedDna({\\n                bgColorId: uint8(dna),\\n                nogglesColorId: uint8((dna >> 8)),\\n                crownId: uint8((dna >> 16)),\\n                doodadId: uint8((dna >> 24)),\\n                garlandId: uint8((dna >> 32)),\\n                shieldId: uint8((dna >> 40)),\\n                quadrantPalette1Id: uint8((dna >> 48)),\\n                quadrantPalette2Id: uint8((dna >> 56)),\\n                repId: uint8((dna >> 64)),\\n                skillId: uint8((dna >> 72)),\\n                classId: uint8((dna >> 80)),\\n                traitId: uint8((dna >> 88))\\n            });\\n    }\\n\\n    /**\\n     * @dev Gets the DNA of a given traits.\\n     * @param decomposedDna The traits to get the DNA from.\\n     * @return The DNA of the traits.\\n     */\\n    function composeDna(DecomposedDna memory decomposedDna) public pure returns (uint96) {\\n        return\\n            uint96(decomposedDna.bgColorId) |\\n            (uint96(decomposedDna.nogglesColorId) << 8) |\\n            (uint96(decomposedDna.crownId) << 16) |\\n            (uint96(decomposedDna.doodadId) << 24) |\\n            (uint96(decomposedDna.garlandId) << 32) |\\n            (uint96(decomposedDna.shieldId) << 40) |\\n            (uint96(decomposedDna.quadrantPalette1Id) << 48) |\\n            (uint96(decomposedDna.quadrantPalette2Id) << 56) |\\n            (uint96(decomposedDna.repId) << 64) |\\n            (uint96(decomposedDna.skillId) << 72) |\\n            (uint96(decomposedDna.classId) << 80) |\\n            (uint96(decomposedDna.traitId) << 88);\\n    }\\n}\\n\",\"keccak256\":\"0xcd59a2e52db31e05e2e5dd9caa6ab65bb29f303c328b56c38ac299f9287f8ec5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6117aa61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063aaa5b4d314610050578063adc4a3a814610085578063c6c30cd01461019f575b600080fd5b61006361005e366004611474565b6102eb565b6040516bffffffffffffffffffffffff90911681526020015b60405180910390f35b6101926100933660046114b9565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250604080516101808101825260ff8084168252600884901c8116602080840191909152601085901c821683850152601885901c8216606084015284901c81166080830152602884901c811660a0830152603084901c811660c0830152603884901c811660e08301529183901c8216610100820152604883901c8216610120820152605083901c821661014082015260589290921c1661016082015290565b60405161007c91906114ee565b6100636101ad366004611634565b6000605882610160015160ff166bffffffffffffffffffffffff16901b605083610140015160ff166bffffffffffffffffffffffff16901b604884610120015160ff166bffffffffffffffffffffffff16901b604085610100015160ff166bffffffffffffffffffffffff16901b60388660e0015160ff166bffffffffffffffffffffffff16901b60308760c0015160ff166bffffffffffffffffffffffff16901b60288860a0015160ff166bffffffffffffffffffffffff16901b6020896080015160ff166bffffffffffffffffffffffff16901b60188a6060015160ff166bffffffffffffffffffffffff16901b60108b6040015160ff166bffffffffffffffffffffffff16901b60088c6020015160ff166bffffffffffffffffffffffff16901b8c6000015160ff1617171717171717171717179050919050565b60008083905060008173ffffffffffffffffffffffffffffffffffffffff166387f307896040518163ffffffff1660e01b8152600401602060405180830381865afa15801561033e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103629190611720565b116103ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f20626720636f6c6f7273000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff16637cca159e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190611720565b116104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f206e6f67676c657320636f6c6f727300000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff1663e703c1866040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105179190611720565b1161057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f2063726f776e73000000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff16639d1f65896040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ef9190611720565b11610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e6f20646f6f646164730000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff1663ddee33b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c79190611720565b1161072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4e6f206761726c616e647300000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff16637576bf876040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079f9190611720565b11610806576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e6f20736869656c64730000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff16632f6171cb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108779190611720565b116108de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4e6f206c6f676f2070616c65747465730000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff1663b122c74f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f9190611720565b116109b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f4e6f20726570730000000000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff166384a5d1c66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a279190611720565b11610a8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f20736b696c6c73000000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff1663320d7b4b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aff9190611720565b11610b66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e6f20636c61737365730000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff16638d915d1f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd79190611720565b11610c3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f20747261697473000000000000000000000000000000000000000000000060448201526064016103c5565b600083604051602001610c5391815260200190565b6040516020818303038152906040528051906020012060001c9050610c788582610c81565b95945050505050565b60008083905060006040518061018001604052808373ffffffffffffffffffffffffffffffffffffffff166387f307896040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d049190611720565b610d1c906bffffffffffffffffffffffff8816611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16637cca159e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d939190611720565b610dae906affffffffffffffffffffff600889901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1663e703c1866040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e259190611720565b610e3f9069ffffffffffffffffffff601089901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16639d1f65896040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190611720565b610ecf9068ffffffffffffffffff601889901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1663ddee33b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f469190611720565b610f5e9067ffffffffffffffff602089901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16637576bf876040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190611720565b610fec9066ffffffffffffff602889901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16632f6171cb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561103f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110639190611720565b6110799065ffffffffffff603089901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16632f6171cb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f09190611720565b6111059064ffffffffff603889901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1663b122c74f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117c9190611720565b6111909063ffffffff604089901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff166384a5d1c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112079190611720565b61121a9062ffffff604889901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1663320d7b4b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561126d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112919190611720565b6112a39061ffff605089901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16638d915d1f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131a9190611720565b61132b9060ff605889901c16611739565b60ff1690529050610c78816000605882610160015160ff166bffffffffffffffffffffffff16901b605083610140015160ff166bffffffffffffffffffffffff16901b604884610120015160ff166bffffffffffffffffffffffff16901b604085610100015160ff166bffffffffffffffffffffffff16901b60388660e0015160ff166bffffffffffffffffffffffff16901b60308760c0015160ff166bffffffffffffffffffffffff16901b60288860a0015160ff166bffffffffffffffffffffffff16901b6020896080015160ff166bffffffffffffffffffffffff16901b60188a6060015160ff166bffffffffffffffffffffffff16901b60108b6040015160ff166bffffffffffffffffffffffff16901b60088c6020015160ff166bffffffffffffffffffffffff16901b8c6000015160ff1617171717171717171717179050919050565b6000806040838503121561148757600080fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146114ab57600080fd5b946020939093013593505050565b6000602082840312156114cb57600080fd5b81356bffffffffffffffffffffffff811681146114e757600080fd5b9392505050565b815160ff1681526101808101602083015161150e602084018260ff169052565b506040830151611523604084018260ff169052565b506060830151611538606084018260ff169052565b50608083015161154d608084018260ff169052565b5060a083015161156260a084018260ff169052565b5060c083015161157760c084018260ff169052565b5060e083015161158c60e084018260ff169052565b506101008381015160ff9081169184019190915261012080850151821690840152610140808501518216908401526101609384015116929091019190915290565b604051610180810167ffffffffffffffff81118282101715611618577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b803560ff8116811461162f57600080fd5b919050565b6000610180828403121561164757600080fd5b61164f6115cd565b6116588361161e565b81526116666020840161161e565b60208201526116776040840161161e565b60408201526116886060840161161e565b60608201526116996080840161161e565b60808201526116aa60a0840161161e565b60a08201526116bb60c0840161161e565b60c08201526116cc60e0840161161e565b60e08201526101006116df81850161161e565b908201526101206116f184820161161e565b9082015261014061170384820161161e565b9082015261016061171584820161161e565b908201529392505050565b60006020828403121561173257600080fd5b5051919050565b60008261176f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50069056fea2646970667358221220b516ebcadfd6910337d7573a3b8c6a04906b85c9b758770fb54b5dddca4c910a64736f6c63430008110033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063aaa5b4d314610050578063adc4a3a814610085578063c6c30cd01461019f575b600080fd5b61006361005e366004611474565b6102eb565b6040516bffffffffffffffffffffffff90911681526020015b60405180910390f35b6101926100933660046114b9565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915250604080516101808101825260ff8084168252600884901c8116602080840191909152601085901c821683850152601885901c8216606084015284901c81166080830152602884901c811660a0830152603084901c811660c0830152603884901c811660e08301529183901c8216610100820152604883901c8216610120820152605083901c821661014082015260589290921c1661016082015290565b60405161007c91906114ee565b6100636101ad366004611634565b6000605882610160015160ff166bffffffffffffffffffffffff16901b605083610140015160ff166bffffffffffffffffffffffff16901b604884610120015160ff166bffffffffffffffffffffffff16901b604085610100015160ff166bffffffffffffffffffffffff16901b60388660e0015160ff166bffffffffffffffffffffffff16901b60308760c0015160ff166bffffffffffffffffffffffff16901b60288860a0015160ff166bffffffffffffffffffffffff16901b6020896080015160ff166bffffffffffffffffffffffff16901b60188a6060015160ff166bffffffffffffffffffffffff16901b60108b6040015160ff166bffffffffffffffffffffffff16901b60088c6020015160ff166bffffffffffffffffffffffff16901b8c6000015160ff1617171717171717171717179050919050565b60008083905060008173ffffffffffffffffffffffffffffffffffffffff166387f307896040518163ffffffff1660e01b8152600401602060405180830381865afa15801561033e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103629190611720565b116103ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4e6f20626720636f6c6f7273000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff16637cca159e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190611720565b116104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f206e6f67676c657320636f6c6f727300000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff1663e703c1866040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105179190611720565b1161057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f2063726f776e73000000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff16639d1f65896040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ef9190611720565b11610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e6f20646f6f646164730000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff1663ddee33b56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c79190611720565b1161072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4e6f206761726c616e647300000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff16637576bf876040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079f9190611720565b11610806576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e6f20736869656c64730000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff16632f6171cb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108779190611720565b116108de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4e6f206c6f676f2070616c65747465730000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff1663b122c74f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f9190611720565b116109b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f4e6f20726570730000000000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff166384a5d1c66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a279190611720565b11610a8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f20736b696c6c73000000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff1663320d7b4b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aff9190611720565b11610b66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e6f20636c61737365730000000000000000000000000000000000000000000060448201526064016103c5565b60008173ffffffffffffffffffffffffffffffffffffffff16638d915d1f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd79190611720565b11610c3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f20747261697473000000000000000000000000000000000000000000000060448201526064016103c5565b600083604051602001610c5391815260200190565b6040516020818303038152906040528051906020012060001c9050610c788582610c81565b95945050505050565b60008083905060006040518061018001604052808373ffffffffffffffffffffffffffffffffffffffff166387f307896040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d049190611720565b610d1c906bffffffffffffffffffffffff8816611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16637cca159e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d939190611720565b610dae906affffffffffffffffffffff600889901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1663e703c1866040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e259190611720565b610e3f9069ffffffffffffffffffff601089901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16639d1f65896040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190611720565b610ecf9068ffffffffffffffffff601889901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1663ddee33b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f469190611720565b610f5e9067ffffffffffffffff602089901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16637576bf876040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190611720565b610fec9066ffffffffffffff602889901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16632f6171cb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561103f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110639190611720565b6110799065ffffffffffff603089901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16632f6171cb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f09190611720565b6111059064ffffffffff603889901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1663b122c74f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611158573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117c9190611720565b6111909063ffffffff604089901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff166384a5d1c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112079190611720565b61121a9062ffffff604889901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff1663320d7b4b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561126d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112919190611720565b6112a39061ffff605089901c16611739565b60ff1681526020018373ffffffffffffffffffffffffffffffffffffffff16638d915d1f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131a9190611720565b61132b9060ff605889901c16611739565b60ff1690529050610c78816000605882610160015160ff166bffffffffffffffffffffffff16901b605083610140015160ff166bffffffffffffffffffffffff16901b604884610120015160ff166bffffffffffffffffffffffff16901b604085610100015160ff166bffffffffffffffffffffffff16901b60388660e0015160ff166bffffffffffffffffffffffff16901b60308760c0015160ff166bffffffffffffffffffffffff16901b60288860a0015160ff166bffffffffffffffffffffffff16901b6020896080015160ff166bffffffffffffffffffffffff16901b60188a6060015160ff166bffffffffffffffffffffffff16901b60108b6040015160ff166bffffffffffffffffffffffff16901b60088c6020015160ff166bffffffffffffffffffffffff16901b8c6000015160ff1617171717171717171717179050919050565b6000806040838503121561148757600080fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146114ab57600080fd5b946020939093013593505050565b6000602082840312156114cb57600080fd5b81356bffffffffffffffffffffffff811681146114e757600080fd5b9392505050565b815160ff1681526101808101602083015161150e602084018260ff169052565b506040830151611523604084018260ff169052565b506060830151611538606084018260ff169052565b50608083015161154d608084018260ff169052565b5060a083015161156260a084018260ff169052565b5060c083015161157760c084018260ff169052565b5060e083015161158c60e084018260ff169052565b506101008381015160ff9081169184019190915261012080850151821690840152610140808501518216908401526101609384015116929091019190915290565b604051610180810167ffffffffffffffff81118282101715611618577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b803560ff8116811461162f57600080fd5b919050565b6000610180828403121561164757600080fd5b61164f6115cd565b6116588361161e565b81526116666020840161161e565b60208201526116776040840161161e565b60408201526116886060840161161e565b60608201526116996080840161161e565b60808201526116aa60a0840161161e565b60a08201526116bb60c0840161161e565b60c08201526116cc60e0840161161e565b60e08201526101006116df81850161161e565b908201526101206116f184820161161e565b9082015261014061170384820161161e565b9082015261016061171584820161161e565b908201529392505050565b60006020828403121561173257600080fd5b5051919050565b60008261176f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50069056fea2646970667358221220b516ebcadfd6910337d7573a3b8c6a04906b85c9b758770fb54b5dddca4c910a64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "composeDna(DnaManager.DecomposedDna)": {
        "details": "Gets the DNA of a given traits.",
        "params": {
          "decomposedDna": "The traits to get the DNA from."
        },
        "returns": {
          "_0": "The DNA of the traits."
        }
      },
      "decomposeDna(uint96)": {
        "details": "Gets the traits of a given DNA.",
        "params": {
          "dna": "The DNA to get the traits from."
        },
        "returns": {
          "_0": "The traits of the DNA."
        }
      },
      "generateDna(address,uint256)": {
        "details": "Generates a unique DNA for an NFT based on a provided seed.",
        "params": {
          "seed": "The seed to generate the DNA.",
          "storeAddress": "Address of the parts store."
        },
        "returns": {
          "_0": "The generated DNA as a uint96 value."
        }
      }
    },
    "title": "DnaManager",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Library to generate and manipulate DNA of Polkadot Builder Crests NFTs.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}