type Block @entity {
    id: ID!
    number: Int! @index
    timestamp: DateTime! @index
}

type Transaction @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    hash: String! @index
    to: String @index
    from: String @index
    success: Boolean @index
}

interface Event @query {
    id: ID!
    blockNumber: Int!
    blockTimestamp: DateTime!
    transactionHash: String!
    contract: String!
    eventName: String!
}

interface Function @query {
    id: ID!
    blockNumber: Int!
    blockTimestamp: DateTime!
    transactionHash: String!
    contract: String!
    functionName: String!
    functionValue: BigInt
    functionSuccess: Boolean
}

type ContractEventBid implements Event @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    eventName: String! @index
    tokenId: BigInt!
    bidder: String!
    bid: BigInt!
}

type ContractEventOwnershipTransferred implements Event @entity @index(fields: ["previousOwner", "newOwner"]) {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    eventName: String! @index
    previousOwner: String! @index
    newOwner: String! @index
}

type ContractEventStart implements Event @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    eventName: String! @index
    tokenId: BigInt!
}

type ContractFunctionBid implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
}

type ContractFunctionOnErc721Received implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
    arg0: String!
    arg1: String!
    arg2: BigInt!
    arg3: String!
}

type ContractFunctionRenounceOwnership implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
}

type ContractFunctionSetDuration implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
    duration: BigInt!
}

type ContractFunctionSetExtendedDuration implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
    extendedDuration: BigInt!
}

type ContractFunctionSetGlmr implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
    glmr: String!
}

type ContractFunctionSetMinBidIncrementPercent implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
    minBidIncrementPercent: BigInt!
}

type ContractFunctionSetMinFirstBid implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
    minFirstBid: BigInt!
}

type ContractFunctionSetTreasury implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
    treasury: String!
}

type ContractFunctionStart implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
}

type ContractFunctionTransferOwnership implements Function @entity {
    id: ID!
    blockNumber: Int! @index
    blockTimestamp: DateTime! @index
    transactionHash: String! @index
    contract: String! @index
    functionName: String! @index
    functionValue: BigInt
    functionSuccess: Boolean @index
    newOwner: String!
}
