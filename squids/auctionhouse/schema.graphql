type Block @entity {
    id: ID!
    number: Int! @index
    timestamp: DateTime!
    transactions: [Transaction!]! @derivedFrom(field: "block")
}

type Transaction @entity {
    id: ID!
    hash: String! @index
    block: Block!
    contract: String
}

interface Event @query {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String!
}

type BidEvent implements Event @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    tokenId: BigInt!
    bidder: String!
    bid: BigInt!
}

type OwnershipTransferredEvent implements Event @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    previousOwner: String! @index
    newOwner: String! @index
}

type StartEvent implements Event @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    tokenId: BigInt!
}

interface Function @query {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String!
}

type BidFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
}

type OnErc721ReceivedFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    arg0: String
    arg1: String
    arg2: BigInt
    arg3: String
}

type RenounceOwnershipFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
}

type SetDurationFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    duration: BigInt
}

type SetExtendedDurationFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    extendedDuration: BigInt
}

type SetMinBidIncrementPercentFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    minBidIncrementPercent: BigInt
}

type SetMinFirstBidFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    minFirstBid: BigInt
}

type SetTreasuryFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    treasury: String
}

type StartFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
}

type TransferOwnershipFunction implements Function @entity {
    id: ID!
    block: Block!
    transaction: Transaction!
    name: String! @index
    newOwner: String
}
